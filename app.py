from flask import Flask, request
import sqlite3
import telebot
import wikipedia
import warnings
from dotenv import load_dotenv
import os
from subscription_handlers import subscribe, unsubscribe
from notification_handlers import send_notification
from weather_handlers import get_weather
from cat_handlers import cats
from service_handlers import send_request, send_service, send_bug, get_currency_rates, play



dices = ['üé≤', 'üéØ', 'üé∞']
subscribed_users = {}

warnings.simplefilter("ignore", category=UserWarning)


currency_api_url = os.environ.get('currency_api_url')


currencies_to_display = ['EUR', 'GBP', 'JPY', 'UAH', 'RUB']

load_dotenv()
TOKEN = os.environ.get('TOKEN')
load_dotenv()
my_chat_id = os.environ.get('my_chat_id')


conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()

conn_2 = sqlite3.connect('subscribers.db', check_same_thread=False)
cursor_2 = conn.cursor()
cursor_2.execute('CREATE TABLE IF NOT EXISTS subscribers (user_id INTEGER PRIMARY KEY);')
conn_2.commit()


cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        user_id INTEGER,
        username TEXT,
        phone_number TEXT DEFAULT NULL
    )
''')
conn.commit()

bot = telebot.TeleBot(TOKEN)
API = os.environ.get('API')
wikipedia.set_lang('uk')
app = Flask(__name__)


@bot.message_handler(commands=['start', ])
def basic_answer(message):
    bot.reply_to(message, '–ü—Ä–∏–≤—ñ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç, –º—ñ–π —Ç–≤–æ—Ä–µ—Ü—å –Ω–∞–∑–≤–∞–≤ –º–µ–Ω–µ –ê–∫–≤–∞, —Ä–∞–¥–∞ –∑ –≤–∞–º–∏ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏.\n'
                          '–î–ª—è —Ç–æ–≥–æ —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –º–æ—ó –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help —Ç–∞ –≥–æ—Ä—Ç–∞–π—Ç–µ –≤–Ω–∏–∑ '
                          '—â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —ó—Ö –≤—Å—ñ, —è –º–æ–∂—É –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —Å–ø—Ä–∞–≤–¥—ñ '
                          '–±–∞–≥–∞—Ç–æ —Ü—ñ–∫–∞–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π, –Ω–∞—Å–æ–ª–æ–¥–∂—É–π—Ç–µ—Å—è, —Å–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ –±—É–¥—É –∫–æ—Ä–∏—Å–Ω–æ—é –¥–ª—è –≤–∞—Å!!!\n'
                          '–î–ª—è –ø–æ–ª–µ–≥—à–µ–Ω–Ω—è –æ—Å—å, —â–æ —Ä–æ–±–ª—è—Ç—å –Ω–µ –æ—Å–Ω–æ–≤–Ω—ñ (—Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω—ñ) –∫–æ–º–∞–Ω–¥–∏:\n'
                          '/weather - –≤–∏ –∑–º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É —É –±—É–¥—å —è–∫–æ–º—É –º—ñ—Å—Ç—ñ\n'
                          '/wiki - –≤–∏ –∑–º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –≤—ñ–∫—ñ–ø–µ–¥—ñ—î—ó –ø—Ä—è–º–æ –∑–≤—ñ–¥—Å–∏, –∑—Ä—É—á–Ω–æ, —á–∏ –Ω–µ —Ç–∞–∫?\n'
                          '/register - –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ª–∏—à–∏—Ç–∏ —Å–≤–æ—ó –¥–∞–Ω–Ω—ñ, —Ç–∞–∫—ñ —è–∫ —Ç–µ–ª–µ–≥—Ä–∞–º ID, –≤–∞—à –Ω—ñ–∫–Ω–µ–π–º, '
                          '–≤–æ–Ω–∏ –±—É–¥—É—Ç—å –∑–∞–ª–∏—à–µ–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ, —Ç–∞ –≤–≤–µ—Å—Ç–∏ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, —â–æ–± –≤—ñ–Ω '
                          '—Ç–∞–∫–æ–∂ –±—É–≤ –≤ –±–∞–∑—ñ –¥–∞–Ω–Ω–∏—Ö\n'
                          '/cats - –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ç–∏–∫—ñ–≤, —â–æ–± —Ä–æ–∑—Å–ª–∞–±–∏—Ç–∏—Å—å\n'
                          '/subscribe - –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è, —è–∫—ñ —ñ–Ω–∫–æ–ª–∏ –±—É–¥–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä\n'
                          '/unsubscribe - –í—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å\n'
                          '–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ç–æ–≥–æ —â–æ–± –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤—É —Ç–∞ —ñ–Ω—à—ñ —î –∫–Ω–æ–ø–∫–∞–º–∏, —è–∫—ñ —Å—Ç–æ—è—Ç—å '
                          '–Ω–∞–¥ –∫–æ–º–∞–Ω–¥–∞–º–∏, —â–æ —è –ø–æ–∫–∞–∑–∞–ª–∞ –≤–∏—â–µ, —ó—Ö —Ä—ñ–∑–Ω–∏—Ü—è –≤ –∑–æ–≤–Ω—ñ—à–Ω—å–æ–º—É –≤–∏–≥–ª—è–¥—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± '
                          '–∑—Ä—É—á–Ω–æ —ó—Ö –≤—ñ–¥—Ä—ñ–∑–Ω—è–Ω—è—Ç–∏ –≤—ñ–¥ –Ω–µ–æ—Å–Ω–æ–≤–Ω–∏—Ö —Ç–∞ –±—ñ–ª—å—à —Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω–∏—Ö'
                          ' –∫–æ–º–∞–Ω–¥, —è–∫—ñ –º–∞—é—Ç—å –≤ —Å–µ–±–µ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Å–ª–µ—à(/).')


@bot.message_handler(commands=['help', ])
def handle_start(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton(text='–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª—É–≥')
    btn2 = telebot.types.KeyboardButton(text='–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞')
    btn3 = telebot.types.KeyboardButton(text='–ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤—É')
    btn4 = telebot.types.KeyboardButton(text='–í–∫–∞–∑–∞—Ç–∏ –Ω–∞ –±–∞–≥')
    btn_currency = telebot.types.KeyboardButton(text='–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    btn5 = telebot.types.KeyboardButton(text='–ó—ñ–≥—Ä–∞—Ç–∏ –≤ —Ä–∞–Ω–¥–æ–º')
    keyboard.add(btn1, btn2, btn3, btn4, btn_currency, btn5)
    keyboard.add(telebot.types.KeyboardButton('/subscribe'))
    keyboard.add(telebot.types.KeyboardButton('/unsubscribe'))
    keyboard.add(telebot.types.KeyboardButton('/cats'))
    keyboard.add(telebot.types.KeyboardButton('/weather'))
    keyboard.add(telebot.types.KeyboardButton('/wiki'))
    keyboard.add(telebot.types.KeyboardButton('/register'))
    bot.reply_to(message, '–û—Å—å –º–æ—ó –∫–æ–º–∞–Ω–¥–∏ (—ó—Ö –º–æ–∂–Ω–∞ '
                          '–≥–æ—Ä—Ç–∞—Ç–∏ –≤–Ω–∏–∑), –¥–ª—è —Ç–æ–≥–æ —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è, —â–æ –≤–æ–Ω–∏ —Ä–æ–±–ª—è—Ç—å —Ä–∞–¥–∂—É –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É:\n '
                          '/start, —Ç–∞–º —è –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∞–º –≤—Å–µ —Ä–æ–∑–ø–æ–≤—ñ–ª–∞:', reply_markup=keyboard)


@bot.message_handler(commands=['subscribe'])
def handle_subscribe(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –ø—ñ–¥–ø–∏—Å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    subscribe(bot, cursor_2, conn_2, message)


@bot.message_handler(commands=['unsubscribe'])
def handle_unsubscribe(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –≤—ñ–¥–ø–∏—Å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    unsubscribe(bot, cursor_2, conn_2, message)


@bot.message_handler(commands=['send_notification'])
def handle_send_notification(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∞–º.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Returns:
        None
    """
    send_notification(bot, cursor_2, my_chat_id, message)


@bot.message_handler(commands=['cats'])
def show_cats(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ç–∞.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    cat_random = cats()  # –û—Ç—Ä–∏–º–∞–π—Ç–µ –≤–∏–ø–∞–¥–∫–æ–≤–µ —Ñ–æ—Ç–æ –∫–æ—Ç–∞
    bot.send_message(message.chat.id, '–í—Å—ñ–º –ø–æ–¥–æ–±–∞—é—Ç—å—Å—è –∫–æ—Ç–∏–∫–∏, —ñ –æ—Å—å –≤–∏–ø–∞–¥–∫–æ–≤—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ç–∏–∫—ñ–≤, —è–∫–∏–º–∏ '
                                      '—è –≤–æ–ª–æ–¥—ñ—é, –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–∏–≤—ñ—Ç—å—Å—è —Ç–∞ —Ä–æ–∑—Å–ª–∞–±—Ç–µ—Å—è.')
    with open(cat_random, 'rb') as photo:
        bot.send_photo(message.chat.id, photo)


@bot.message_handler(commands=['weather'])
def handle_weather(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    get_weather(bot, message, API)


@bot.message_handler(commands=['wiki'])
def wiki(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ—à—É–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —É –í—ñ–∫—ñ–ø–µ–¥—ñ—ó.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –∑–∞–ø–∏—Ç –¥–ª—è –ø–æ—à—É–∫—É —É –≤—ñ–∫—ñ–ø–µ–¥—ñ—ó.')
    bot.register_next_step_handler(message, process_wiki_request)


def process_wiki_request(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    query = message.text
    try:
        page = wikipedia.page(query)
        bot.send_message(message.chat.id, page.summary)
    except wikipedia.exceptions.DisambiguationError as e:
        options = ", ".join(e.options)
        bot.send_message(message.chat.id, f"–£—Ç–æ—á–Ω—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç. –ú–æ–∂–ª–∏–≤—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏: {options}")
    except wikipedia.exceptions.PageError:
        bot.send_message(message.chat.id, "–ù–∞–∂–∞–ª—å, –ø–æ –≤–∞—à–æ–º—É –∑–∞–ø–∏—Ç—É –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except wikipedia.exceptions.HTTPTimeoutError:
        bot.send_message(message.chat.id, "–ù–∞ –∂–∞–ª—å, –í—ñ–∫—ñ–ø–µ–¥—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
    except Exception as e:
        bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")


@bot.message_handler(commands=['register'])
def start_register(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    #user_id = message.from_user.id

    bot.send_message(message.chat.id, '–î–ª—è —Ä–µ–≥—ñ—Å—Ç—Ä–∞—Ü—ñ—ó –≤–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–≤ —Ñ–æ—Ä–º–∞—Ç—ñ +1234567890):')
    bot.register_next_step_handler(message, process_phone_input)


def process_phone_input(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –≤–≤–µ–¥–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É.

    Returns:
        None
    """
    user_id = message.from_user.id
    username = message.from_user.username
    phone_number = message.text


    cursor.execute('SELECT * FROM users WHERE user_id=?', (user_id,))
    existing_user = cursor.fetchone()

    if existing_user:
        bot.send_message(message.chat.id, '–í–∏ –≤–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–æ–≤–∞–Ω—ñ.')
    else:

        cursor.execute('INSERT INTO users (user_id, username, phone_number) VALUES (?, ?, ?)',
                       (user_id, username, phone_number))
        conn.commit()
        bot.send_message(message.chat.id, '–†–µ–≥—ñ—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ!. –í–∞—à—ñ –¥–∞–Ω–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ.')


@bot.message_handler(commands=['list_users'])
def list_users(message) -> None:
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Returns:
        None
    """
    cursor.execute('SELECT * FROM users')
    users = cursor.fetchall()
    if message.chat.id == my_chat_id:
        if users:
            user_list = "\n".join([f"{user[0]}. {user[2]} (ID: {user[1]}, Phone: {user[3] if len(user) > 3 else '–ù–µ–º–∞—î'})" for user in users])
            bot.send_message(message.chat.id, f"–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:\n{user_list}")
        else:
            bot.send_message(message.chat.id, '–ù–µ–º–∞—î –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.')


@bot.message_handler(content_types=['text'])
def repeat_on_message(message) -> None:
    """
    –ü–æ–≤—Ç–æ—Ä—é—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –∫–æ–º–∞–Ω–¥–∏.
    –í –Ω–∞—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –≤–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥–∏ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Parameters:
        message (Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    Returns:
        None
    """
    if message.text.lower() == '–ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞':
        keyboard = telebot.types.InlineKeyboardMarkup()
        url_button = telebot.types.InlineKeyboardButton(text='–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞',
                                                        url='https://www.instagram.com/_.d1scipl1ne._/')
        url_button1 = telebot.types.InlineKeyboardButton(text='–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç, —è–∫–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ –∑—Ä–æ–±–∏–≤ –¥–ª—è –¥–∏–ø–ª–æ–º—É',
                                                              url='https://django-oneschool-29bda5f1f04f.herokuapp.com/')
        keyboard.add(url_button)
        keyboard.add(url_button1)
        bot.send_message(message.chat.id, '–í—Å–µ —â–æ —Ü—ñ–∫–∞–≤–∏—Ç—å —Ç–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –Ω–∞–¥—Å–∏–ª–∞–π—Ç–µ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ '
                                          '–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.', reply_markup=keyboard)
    if message.text.lower() == '–∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤—É':
        bot.send_message(message.chat.id, '–†–∞–¥–∞ –≤–∞—Å –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞—Ç–∏, –≤–∫–∞–∂—ñ—Ç—å —Å–≤–æ—é –ø–æ—à—Ç—É —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª–∏, –ø–æ —è–∫–∏–º –¥–æ'
                                          '–≤–∞—Å –º–æ–∂–Ω–∞ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è! –ê —Ç–∞–∫–æ–∂, —â–æ –≤–∏ –±–∞–∂–∞—î—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏.')
        bot.register_next_step_handler(message, lambda msg: send_request(bot, my_chat_id, msg))

    if message.text.lower() == '—Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª—É–≥':
        send_service(bot, message)

    if message.text.lower() == '–≤–∫–∞–∑–∞—Ç–∏ –Ω–∞ –±–∞–≥':
        bot.send_message(message.chat.id, '–í–∏ –∑–Ω–∞–π—à–ª–∏ —è–∫–∏–π—Å—å –±–∞–≥ —á–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É —Ä–æ–±–æ—Ç—É? –ù–∞–ø–∏—à—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞, '
                                          '—â–æ —ñ –¥–µ –ø—Ä–∞—Ü—é—î –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ, –º–∏ –≤—Å–µ –≤–∏–ø—Ä–∞–≤–∏–º–æ!')
        bot.register_next_step_handler(message, lambda msg: send_bug(bot, my_chat_id, msg))

    if message.text.lower() == '–∫—É—Ä—Å –≤–∞–ª—é—Ç':
        get_currency_rates(bot, message, currency_api_url, currencies_to_display)

    if message.text.lower() == '–∑—ñ–≥—Ä–∞—Ç–∏ –≤ —Ä–∞–Ω–¥–æ–º':
        play(bot, message, dices)


@app.route('/' + TOKEN, methods=['POST'])
def get_message():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return 'Test Bot', 200


@app.route('/')
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url='https://bot-discipline-f7313fe78025.herokuapp.com/' + TOKEN)
    return 'Test Bot', 200


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
